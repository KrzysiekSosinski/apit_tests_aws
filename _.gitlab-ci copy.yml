---
include:
  - project: "das-platform/pipeline-fragments/shared-pipeline-templates"
    ref: v5.0.6
    file:
      - .gradle-coverity-scan.gitlab-ci.yml
      - .gradle-sonarqube-scan.gitlab-ci.yml
      - .xray-scan-binary.gitlab-ci.yml
      - .docker-build.gitlab-ci.yml
      - .twistlock-scan.gitlab-ci.yml
      - .attestation-summary.gitlab-ci.yml
      - .create-release.gitlab-ci.yml
      - .shared-pipeline-resources.yml
      - .run-linters.gitlab-ci.yml
      - .binary-artifactory-publish.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

variables:
  # Variables needed by shared-pipeline-templates
  AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID_CICD} # DAS NFPX-CICD AWS Account
  BUILD_IMAGE_BASE: ${AWS_ACCOUNT_ID_CICD}.dkr.ecr.${AWS_REGION}.amazonaws.com/${CI_PROJECT_NAME}
  COVERITY_WORKING_DIR: ${CI_PROJECT_DIR}/coverity
  COVERITY_PROJECT_ID: 10421 # ngfp Coverity project ID
  COVERITY_STREAM_DEV: '[Dev]${ESATSID};${CI_PROJECT_NAME}'
  BINARY_PATH: "build/libs/*.jar"
  # Variables only used locally in this pipeline
  AWS_ACCOUNT_ID_DEV: 141479255310 # NFPX-DEV AWS Account
  AWS_ACCOUNT_ID_CICD: 608499519692 # DAS NFPX-CICD AWS Account
  AWS_ACCOUNT_ID_EEC_SHARED_SERVICES: 957766590265 # EEC Shared Services AWS Account
  AWS_REGION: us-west-2 # location of the cluster to deploy to
  ESATSID: 3628732 # NGFP ESATSId
  CI_DEBUG_SERVICES: "true"

default:
  tags:
    - aws
  image: ${AWS_ACCOUNT_ID_EEC_SHARED_SERVICES}.dkr.ecr.${AWS_REGION}.amazonaws.com/daa/openjdk/v17@sha256:affa47e116428b7730af44009c93c81ec04c070e76c8ff231c1166cdbae6d4f8

stages:
  - compile
  - test
  - build
  - publish
  - security_scans
  - runtime_test
  - release

.pre:
  variables:
    HELM_CHART_PATH: ''

.base_gradle_scripts:
  cache: &gradle_cache
    key: $CI_PROJECT_NAME
    paths:
      - .gradle/caches
      - .gradle/wrapper
    policy: pull

binary compile:
  stage: compile
  extends: .base_gradle_scripts
  artifacts:
    paths:
      - $BINARY_PATH
  variables:
    ADDITIONAL_GRADLE_ARGS: --no-daemon
    GRADLE_TARGET: bootJar
  cache:
    <<: *gradle_cache
    policy: pull-push

unit-test:
  stage: test
  extends: .base_gradle_scripts
  variables:
    GRADLE_TARGET: test
  after_script:
    - cat build/reports/jacoco/test/html/index.html | grep -o 'Total[^%]*%'
  coverage: /Total.*?([0-9]{1,3})%/
  artifacts:
    expose_as: Code Coverage Report
    paths:
      - build/reports/jacoco/test/
    reports:
      junit:
        - build/test-results/test/*.xml

coverity-scan:
  allow_failure: true

coverity-badge-update:
  allow_failure: true

sonarqube-scan:
  allow_failure: true
  needs:
    - job: unit-test
      artifacts: true

run-linters:
  allow_failure: true

xray-scan:
  allow_failure: true

docker-build:
  needs:
    - binary compile
    - unit-test
    - sonarqube-scan
    - coverity-scan
    - xray-scan

smoke-test:
  stage: runtime_test
  extends: .base_gradle_scripts
  services:
    - name: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${CI_PROJECT_PATH}:${CI_COMMIT_SHORT_SHA}
      alias: filing
    - name: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/ngfp1/docker-images/eurocontrol-mock-service:8b091315
      alias: ec
    - name: ${AWS_ACCOUNT_ID_CICD}.dkr.ecr.${AWS_REGION}.amazonaws.com/ngfp1/docker-images/filing-postgres-image:39679887
      alias: db
  variables:
    SPRING_PROFILES_ACTIVE: runtime-test
    GRADLE_TARGET: tags=@SmokeTest
    BASE_GRADLE_ARGS: test-filing
    ADDITIONAL_GRADLE_ARGS: -P
    SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/filing
  needs:
    - push-to-ecr